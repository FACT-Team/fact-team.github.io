<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="d7/d34/classMustache_1_1Context" kind="class" prot="public" abstract="yes">
    <compoundname>Mustache::Context</compoundname>
    <derivedcompoundref refid="d5/d8b/classMustache_1_1QtVariantContext" prot="public" virt="non-virtual">Mustache::QtVariantContext</derivedcompoundref>
    <includes refid="d9/d77/mustache_8h" local="no">mustache.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d34/classMustache_1_1Context_1a25445307afb54ba9fbb3e6957061796c" prot="private" static="no" mutable="no">
        <type><ref refid="d0/dce/classMustache_1_1PartialResolver" kindref="compound">PartialResolver</ref> *</type>
        <definition>PartialResolver* Mustache::Context::m_partialResolver</definition>
        <argsstring></argsstring>
        <name>m_partialResolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="96" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1a0a3453e4a263cc9a1d061485c621f74e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Context::Context</definition>
        <argsstring>(PartialResolver *resolver=0)</argsstring>
        <name>Context</name>
        <param>
          <type><ref refid="d0/dce/classMustache_1_1PartialResolver" kindref="compound">PartialResolver</ref> *</type>
          <declname>resolver</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a context. <computeroutput>resolver</computeroutput> is used to fetch the expansions for any {{&gt;partial}} tags which appear in a template. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="40" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1ac928d906d8d74cecb86b12685e250924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Mustache::Context::~Context</definition>
        <argsstring>()</argsstring>
        <name>~Context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="41" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1a49d5e75bc9d85b279f620b6557eefd0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString Mustache::Context::stringValue</definition>
        <argsstring>(const QString &amp;key) const =0</argsstring>
        <name>stringValue</name>
        <reimplementedby refid="d5/d8b/classMustache_1_1QtVariantContext_1a55b19269efa6924edf21118ab0b49e08">stringValue</reimplementedby>
        <reimplementedby refid="db/da6/classCounterContext_1adb984d696efcc32abaaf0aaeade4f8b8">stringValue</reimplementedby>
        <reimplementedby refid="db/da6/classCounterContext_1adb984d696efcc32abaaf0aaeade4f8b8">stringValue</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the value for <computeroutput>key</computeroutput> in the current context. This is used to replace a Mustache value tag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1a8af44c37ffdbdba1e3b93835ea87aff9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Mustache::Context::isFalse</definition>
        <argsstring>(const QString &amp;key) const =0</argsstring>
        <name>isFalse</name>
        <reimplementedby refid="d5/d8b/classMustache_1_1QtVariantContext_1af5f93b6ff7ac3c24928757a2af1b8820">isFalse</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the value for <computeroutput>key</computeroutput> is &apos;false&apos; or an empty list. &apos;False&apos; values typically include empty strings, the boolean value false etc.</para><para>When processing a section Mustache tag, the section is not rendered if the key is false, or for an inverted section tag, the section is only rendered if the key is false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1a934c2d632a2f9443d027582032d4ce90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Mustache::Context::listCount</definition>
        <argsstring>(const QString &amp;key) const =0</argsstring>
        <name>listCount</name>
        <reimplementedby refid="d5/d8b/classMustache_1_1QtVariantContext_1aa055fefa606e0958549cb4671e628e9c">listCount</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of items in the list value for <computeroutput>key</computeroutput> or 0 if the value for <computeroutput>key</computeroutput> is not a list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1a586f212ab34abacc4859c6bcae1298c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Mustache::Context::push</definition>
        <argsstring>(const QString &amp;key, int index=-1)=0</argsstring>
        <name>push</name>
        <reimplementedby refid="d5/d8b/classMustache_1_1QtVariantContext_1aa5164d437812877c96faa833d8ce5eac">push</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current context to the value for <computeroutput>key</computeroutput>. If index is &gt;= 0, set the current context to the <computeroutput>index&apos;th</computeroutput> value in the list value for <computeroutput>key</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1ac5f9a26fafe600ca8134348ecd12ad01" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Mustache::Context::pop</definition>
        <argsstring>()=0</argsstring>
        <name>pop</name>
        <reimplementedby refid="d5/d8b/classMustache_1_1QtVariantContext_1adfb3067d5cf209e4203a0b1754008efc">pop</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exit the current context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1ad69c8fa16687f4e8d885821c0c3c25fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Context::partialValue</definition>
        <argsstring>(const QString &amp;key) const </argsstring>
        <name>partialValue</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the partial template for a given <computeroutput>key</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="72" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.cpp" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1afb65ec991eb184bceeda1a49a193bb1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/dce/classMustache_1_1PartialResolver" kindref="compound">PartialResolver</ref> *</type>
        <definition>PartialResolver * Context::partialResolver</definition>
        <argsstring>() const </argsstring>
        <name>partialResolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the partial resolver passed to the constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="75" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1a27d9b726c1554653f1783d0eb693662a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Context::canEval</definition>
        <argsstring>(const QString &amp;key) const </argsstring>
        <name>canEval</name>
        <reimplementedby refid="d5/d8b/classMustache_1_1QtVariantContext_1a2671990a3c9d8d4d7b626fa85b841ab2">canEval</reimplementedby>
        <reimplementedby refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291">canEval</reimplementedby>
        <reimplementedby refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291">canEval</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if <ref refid="d7/d34/classMustache_1_1Context_1acded87450182e91cbb0b37e375a4a366" kindref="member">eval()</ref> should be used to render section tags using <computeroutput>key</computeroutput>. If <ref refid="d7/d34/classMustache_1_1Context_1a27d9b726c1554653f1783d0eb693662a" kindref="member">canEval()</ref> returns true for a key, the renderer will pass the literal, unrendered block of text for the section to <ref refid="d7/d34/classMustache_1_1Context_1acded87450182e91cbb0b37e375a4a366" kindref="member">eval()</ref> and replace the section with the result.</para><para><ref refid="d7/d34/classMustache_1_1Context_1a27d9b726c1554653f1783d0eb693662a" kindref="member">canEval()</ref> and <ref refid="d7/d34/classMustache_1_1Context_1acded87450182e91cbb0b37e375a4a366" kindref="member">eval()</ref> are equivalents for callable objects (eg. lambdas) in other Mustache implementations.</para><para>The default implementation always returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="86" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="d7/d34/classMustache_1_1Context_1acded87450182e91cbb0b37e375a4a366" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Context::eval</definition>
        <argsstring>(const QString &amp;key, const QString &amp;_template, Renderer *renderer)</argsstring>
        <name>eval</name>
        <reimplementedby refid="d5/d8b/classMustache_1_1QtVariantContext_1a0602be333afa1d4fa89c2c5820311bf1">eval</reimplementedby>
        <reimplementedby refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99">eval</reimplementedby>
        <reimplementedby refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99">eval</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>_template</declname>
        </param>
        <param>
          <type><ref refid="dc/d58/classMustache_1_1Renderer" kindref="compound">Renderer</ref> *</type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback used to render a template section with the given <computeroutput>key</computeroutput>. <computeroutput>renderer</computeroutput> will substitute the original section tag with the result of <ref refid="d7/d34/classMustache_1_1Context_1acded87450182e91cbb0b37e375a4a366" kindref="member">eval()</ref>.</para><para>The default implementation returns an empty string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="93" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.cpp" bodystart="88" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="d7/d34/classMustache_1_1Context" kindref="compound">Context</ref> is an interface that <ref refid="dc/d58/classMustache_1_1Renderer_1ab82d90fe802606145d1f7ed9f2a9cf81" kindref="member">Mustache::Renderer::render()</ref> uses to fetch substitutions for template tags. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="212">
        <label>CounterContext</label>
        <link refid="db/da6/classCounterContext"/>
        <childnode refid="211" relation="public-inheritance">
        </childnode>
        <childnode refid="211" relation="public-inheritance">
        </childnode>
      </node>
      <node id="211">
        <label>Mustache::QtVariantContext</label>
        <link refid="d5/d8b/classMustache_1_1QtVariantContext"/>
        <childnode refid="210" relation="public-inheritance">
        </childnode>
      </node>
      <node id="210">
        <label>Mustache::Context</label>
        <link refid="d7/d34/classMustache_1_1Context"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="213">
        <label>Mustache::Context</label>
        <link refid="d7/d34/classMustache_1_1Context"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" line="35" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/src/mustache.h" bodystart="34" bodyend="97"/>
    <listofallmembers>
      <member refid="d7/d34/classMustache_1_1Context_1a27d9b726c1554653f1783d0eb693662a" prot="public" virt="virtual"><scope>Mustache::Context</scope><name>canEval</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1a0a3453e4a263cc9a1d061485c621f74e" prot="public" virt="non-virtual"><scope>Mustache::Context</scope><name>Context</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1acded87450182e91cbb0b37e375a4a366" prot="public" virt="virtual"><scope>Mustache::Context</scope><name>eval</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1a8af44c37ffdbdba1e3b93835ea87aff9" prot="public" virt="pure-virtual"><scope>Mustache::Context</scope><name>isFalse</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1a934c2d632a2f9443d027582032d4ce90" prot="public" virt="pure-virtual"><scope>Mustache::Context</scope><name>listCount</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1a25445307afb54ba9fbb3e6957061796c" prot="private" virt="non-virtual"><scope>Mustache::Context</scope><name>m_partialResolver</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1afb65ec991eb184bceeda1a49a193bb1f" prot="public" virt="non-virtual"><scope>Mustache::Context</scope><name>partialResolver</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1ad69c8fa16687f4e8d885821c0c3c25fd" prot="public" virt="non-virtual"><scope>Mustache::Context</scope><name>partialValue</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1ac5f9a26fafe600ca8134348ecd12ad01" prot="public" virt="pure-virtual"><scope>Mustache::Context</scope><name>pop</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1a586f212ab34abacc4859c6bcae1298c3" prot="public" virt="pure-virtual"><scope>Mustache::Context</scope><name>push</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1a49d5e75bc9d85b279f620b6557eefd0c" prot="public" virt="pure-virtual"><scope>Mustache::Context</scope><name>stringValue</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1ac928d906d8d74cecb86b12685e250924" prot="public" virt="virtual"><scope>Mustache::Context</scope><name>~Context</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
