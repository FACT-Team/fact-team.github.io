<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="db/da6/classCounterContext" kind="class" prot="public">
    <compoundname>CounterContext</compoundname>
    <basecompoundref refid="d5/d8b/classMustache_1_1QtVariantContext" prot="public" virt="non-virtual">Mustache::QtVariantContext</basecompoundref>
    <basecompoundref refid="d5/d8b/classMustache_1_1QtVariantContext" prot="public" virt="non-virtual">Mustache::QtVariantContext</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="db/da6/classCounterContext_1ac4ad706a0ad4e81fed489f97c5049e03" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CounterContext::counter</definition>
        <argsstring></argsstring>
        <name>counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" line="255" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/da6/classCounterContext_1a05c70666c806b2cd888c24f5edae8d87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CounterContext::CounterContext</definition>
        <argsstring>(const QVariantHash &amp;map)</argsstring>
        <name>CounterContext</name>
        <param>
          <type>const QVariantHash &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" line="257" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CounterContext::canEval</definition>
        <argsstring>(const QString &amp;key) const </argsstring>
        <name>canEval</name>
        <reimplements refid="d5/d8b/classMustache_1_1QtVariantContext_1a2671990a3c9d8d4d7b626fa85b841ab2">canEval</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref> should be used to render section tags using <computeroutput>key</computeroutput>. If <ref refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" kindref="member">canEval()</ref> returns true for a key, the renderer will pass the literal, unrendered block of text for the section to <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref> and replace the section with the result.</para><para><ref refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" kindref="member">canEval()</ref> and <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref> are equivalents for callable objects (eg. lambdas) in other Mustache implementations.</para><para>The default implementation always returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" line="262" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString CounterContext::eval</definition>
        <argsstring>(const QString &amp;key, const QString &amp;_template, Mustache::Renderer *renderer)</argsstring>
        <name>eval</name>
        <reimplements refid="d5/d8b/classMustache_1_1QtVariantContext_1a0602be333afa1d4fa89c2c5820311bf1">eval</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>_template</declname>
        </param>
        <param>
          <type><ref refid="dc/d58/classMustache_1_1Renderer" kindref="compound">Mustache::Renderer</ref> *</type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback used to render a template section with the given <computeroutput>key</computeroutput>. <computeroutput>renderer</computeroutput> will substitute the original section tag with the result of <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref>.</para><para>The default implementation returns an empty string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" line="266" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" bodystart="266" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="db/da6/classCounterContext_1adb984d696efcc32abaaf0aaeade4f8b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString CounterContext::stringValue</definition>
        <argsstring>(const QString &amp;key) const </argsstring>
        <name>stringValue</name>
        <reimplements refid="d5/d8b/classMustache_1_1QtVariantContext_1a55b19269efa6924edf21118ab0b49e08">stringValue</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the value for <computeroutput>key</computeroutput> in the current context. This is used to replace a Mustache value tag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" line="273" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" bodystart="273" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="db/da6/classCounterContext_1a05c70666c806b2cd888c24f5edae8d87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CounterContext::CounterContext</definition>
        <argsstring>(const QVariantHash &amp;map)</argsstring>
        <name>CounterContext</name>
        <param>
          <type>const QVariantHash &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" line="241" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CounterContext::canEval</definition>
        <argsstring>(const QString &amp;key) const </argsstring>
        <name>canEval</name>
        <reimplements refid="d5/d8b/classMustache_1_1QtVariantContext_1a2671990a3c9d8d4d7b626fa85b841ab2">canEval</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref> should be used to render section tags using <computeroutput>key</computeroutput>. If <ref refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" kindref="member">canEval()</ref> returns true for a key, the renderer will pass the literal, unrendered block of text for the section to <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref> and replace the section with the result.</para><para><ref refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" kindref="member">canEval()</ref> and <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref> are equivalents for callable objects (eg. lambdas) in other Mustache implementations.</para><para>The default implementation always returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" line="246" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString CounterContext::eval</definition>
        <argsstring>(const QString &amp;key, const QString &amp;_template, Mustache::Renderer *renderer)</argsstring>
        <name>eval</name>
        <reimplements refid="d5/d8b/classMustache_1_1QtVariantContext_1a0602be333afa1d4fa89c2c5820311bf1">eval</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>_template</declname>
        </param>
        <param>
          <type><ref refid="dc/d58/classMustache_1_1Renderer" kindref="compound">Mustache::Renderer</ref> *</type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback used to render a template section with the given <computeroutput>key</computeroutput>. <computeroutput>renderer</computeroutput> will substitute the original section tag with the result of <ref refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" kindref="member">eval()</ref>.</para><para>The default implementation returns an empty string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" line="250" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" bodystart="250" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="db/da6/classCounterContext_1adb984d696efcc32abaaf0aaeade4f8b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString CounterContext::stringValue</definition>
        <argsstring>(const QString &amp;key) const </argsstring>
        <name>stringValue</name>
        <reimplements refid="d5/d8b/classMustache_1_1QtVariantContext_1a55b19269efa6924edf21118ab0b49e08">stringValue</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the value for <computeroutput>key</computeroutput> in the current context. This is used to replace a Mustache value tag. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" line="257" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/tests/qt-mustache/test_mustache.cpp" bodystart="257" bodyend="263"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="219">
        <label>CounterContext</label>
        <link refid="db/da6/classCounterContext"/>
        <childnode refid="220" relation="public-inheritance">
        </childnode>
        <childnode refid="220" relation="public-inheritance">
        </childnode>
      </node>
      <node id="220">
        <label>Mustache::QtVariantContext</label>
        <link refid="d5/d8b/classMustache_1_1QtVariantContext"/>
        <childnode refid="221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="221">
        <label>Mustache::Context</label>
        <link refid="d7/d34/classMustache_1_1Context"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="222">
        <label>CounterContext</label>
        <link refid="db/da6/classCounterContext"/>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="223">
        <label>Mustache::QtVariantContext</label>
        <link refid="d5/d8b/classMustache_1_1QtVariantContext"/>
        <childnode refid="224" relation="public-inheritance">
        </childnode>
      </node>
      <node id="224">
        <label>Mustache::Context</label>
        <link refid="d7/d34/classMustache_1_1Context"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" line="253" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/libs/qt-mustache/tests/test_mustache.cpp" bodystart="252" bodyend="280"/>
    <listofallmembers>
      <member refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" prot="public" virt="virtual"><scope>CounterContext</scope><name>canEval</name></member>
      <member refid="db/da6/classCounterContext_1a2b2c8d5bbd329e20ce6e16be72676291" prot="public" virt="virtual"><scope>CounterContext</scope><name>canEval</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1a0a3453e4a263cc9a1d061485c621f74e" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>Context</name></member>
      <member refid="db/da6/classCounterContext_1ac4ad706a0ad4e81fed489f97c5049e03" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>counter</name></member>
      <member refid="db/da6/classCounterContext_1a05c70666c806b2cd888c24f5edae8d87" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>CounterContext</name></member>
      <member refid="db/da6/classCounterContext_1a05c70666c806b2cd888c24f5edae8d87" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>CounterContext</name></member>
      <member refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" prot="public" virt="virtual"><scope>CounterContext</scope><name>eval</name></member>
      <member refid="db/da6/classCounterContext_1a01764884d5bdbe014b8e569c10c82e99" prot="public" virt="virtual"><scope>CounterContext</scope><name>eval</name></member>
      <member refid="d5/d8b/classMustache_1_1QtVariantContext_1a3b258bcbe77d882a01c53abd1a9425d0" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>fn_t</name></member>
      <member refid="d5/d8b/classMustache_1_1QtVariantContext_1af5f93b6ff7ac3c24928757a2af1b8820" prot="public" virt="virtual"><scope>CounterContext</scope><name>isFalse</name></member>
      <member refid="d5/d8b/classMustache_1_1QtVariantContext_1aa055fefa606e0958549cb4671e628e9c" prot="public" virt="virtual"><scope>CounterContext</scope><name>listCount</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1afb65ec991eb184bceeda1a49a193bb1f" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>partialResolver</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1ad69c8fa16687f4e8d885821c0c3c25fd" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>partialValue</name></member>
      <member refid="d5/d8b/classMustache_1_1QtVariantContext_1adfb3067d5cf209e4203a0b1754008efc" prot="public" virt="virtual"><scope>CounterContext</scope><name>pop</name></member>
      <member refid="d5/d8b/classMustache_1_1QtVariantContext_1aa5164d437812877c96faa833d8ce5eac" prot="public" virt="virtual"><scope>CounterContext</scope><name>push</name></member>
      <member refid="d5/d8b/classMustache_1_1QtVariantContext_1ac9eff9d97c00dbcad6b38670327050ee" prot="public" virt="non-virtual"><scope>CounterContext</scope><name>QtVariantContext</name></member>
      <member refid="db/da6/classCounterContext_1adb984d696efcc32abaaf0aaeade4f8b8" prot="public" virt="virtual"><scope>CounterContext</scope><name>stringValue</name></member>
      <member refid="db/da6/classCounterContext_1adb984d696efcc32abaaf0aaeade4f8b8" prot="public" virt="virtual"><scope>CounterContext</scope><name>stringValue</name></member>
      <member refid="d7/d34/classMustache_1_1Context_1ac928d906d8d74cecb86b12685e250924" prot="public" virt="virtual"><scope>CounterContext</scope><name>~Context</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
