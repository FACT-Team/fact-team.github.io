<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="df/d68/classModels_1_1User" kind="class" prot="public">
    <compoundname>Models::User</compoundname>
    <basecompoundref refid="de/d0a/classModels_1_1People" prot="public" virt="non-virtual">Models::People</basecompoundref>
    <basecompoundref refid="d0/d9c/classModels_1_1IModel" prot="public" virt="non-virtual">Models::IModel</basecompoundref>
    <includes refid="d8/ddb/user_8h" local="no">user.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d68/classModels_1_1User_1a2811a449926c135f0dd6b7c81ee1d452" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Models::User::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <briefdescription>
<para>User/Company description on it activity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="141" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d68/classModels_1_1User_1af650999e2e711d32314e50faaf0a767b" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Models::User::_noSiret</definition>
        <argsstring></argsstring>
        <name>_noSiret</name>
        <briefdescription>
<para>SIRET number (company registration number) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="142" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d68/classModels_1_1User_1a47952911ed24738caa351b71ab278ade" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Models::User::_workspaceName</definition>
        <argsstring></argsstring>
        <name>_workspaceName</name>
        <briefdescription>
<para>Workspace name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="143" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d68/classModels_1_1User_1ade60fdf921120c32b29e737012d9ef77" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Models::User::_workspacePath</definition>
        <argsstring></argsstring>
        <name>_workspacePath</name>
        <briefdescription>
<para>Workspace directory path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="144" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ab106b51be814f7d3a055874781f1f2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Models::User::User</definition>
        <argsstring>()</argsstring>
        <name>User</name>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1ab106b51be814f7d3a055874781f1f2ee" kindref="member">User::User</ref>. Contruct an <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="26" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1a8eb50ce05c34b28cf39ff980066f3113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Models::User::User</definition>
        <argsstring>(int id)</argsstring>
        <name>User</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1ab106b51be814f7d3a055874781f1f2ee" kindref="member">User::User</ref>. Construct a <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> with the identify <emphasis>id</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> id </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="32" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ada0daaa6886be3716af6e15d28c01915" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Models::User::commit</definition>
        <argsstring>()</argsstring>
        <name>commit</name>
        <reimplements refid="d0/d9c/classModels_1_1IModel_1ab4bc529739a8d243222212590888be45">commit</reimplements>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1ada0daaa6886be3716af6e15d28c01915" kindref="member">User::commit</ref> Update user data in <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> table on the database. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="37" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="18" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ab46c7e1841dca66bc01cd95328b97877" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Models::User::hydrat</definition>
        <argsstring>(int id=1)</argsstring>
        <name>hydrat</name>
        <reimplements refid="d0/d9c/classModels_1_1IModel_1a7ce6def437f5e1f6a78ee1d67ca028e4">hydrat</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1ab46c7e1841dca66bc01cd95328b97877" kindref="member">User::hydrat</ref> Get data of the user who is specified by <emphasis>id</emphasis> from the database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> identify </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="44" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="84" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ae0870269116b5bda3b5f1c8527e300be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Models::User::remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <reimplements refid="d0/d9c/classModels_1_1IModel_1a290473739e709321c818f4451e05e619">remove</reimplements>
        <briefdescription>
<para>remove Remove the current <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="49" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1abbc8a3a40b527497872240bf39f21314" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVariantHash</type>
        <definition>QVariantHash Models::User::getDataMap</definition>
        <argsstring>()</argsstring>
        <name>getDataMap</name>
        <reimplements refid="d0/d9c/classModels_1_1IModel_1a9851b0f296aac58353edff22af11cf3c">getDataMap</reimplements>
        <briefdescription>
<para>getDataMap Get all data of model with a HashMap key/value </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Model&apos;s data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="55" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="31" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ae61c862ac430d25b538601f343f7bf98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::User::updateFolders</definition>
        <argsstring>(void)</argsstring>
        <name>updateFolders</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>MainWindow::updateFolders Make directories which contain quotes and billings. Directories are the same than theirs of the Tree organisation (without Projects). </para>        </briefdescription>
        <detaileddescription>
<para>Organisation of folders are formed like this:<itemizedlist>
<listitem><para>COMPANY CustomerLastname CustomerFirstname/<itemizedlist>
<listitem><para>Quotes/<itemizedlist>
<listitem><para>quote1 ...</para></listitem></itemizedlist>
</para></listitem><listitem><para>Billings/<itemizedlist>
<listitem><para>billing1 ... </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="72" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="47" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1a56a37a1b1125c28e8e72c9a3551b7da5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Models::User::getTitle</definition>
        <argsstring>() const </argsstring>
        <name>getTitle</name>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1a56a37a1b1125c28e8e72c9a3551b7da5" kindref="member">User::getTitle</ref> Return a short description of <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> (company) activity. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a short description of user (company) activity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="79" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1a0fe65ebdee17c2986c874e480e1cb0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::User::setTitle</definition>
        <argsstring>(const QString &amp;title)</argsstring>
        <name>setTitle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1a0fe65ebdee17c2986c874e480e1cb0bd" kindref="member">User::setTitle</ref> Modify the user/company activities <emphasis>description</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Short description on activity(ies) of <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> company </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="85" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1a617ee9ede3791842fbf8593f08660d37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Models::User::getNoSiret</definition>
        <argsstring>() const </argsstring>
        <name>getNoSiret</name>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1a617ee9ede3791842fbf8593f08660d37" kindref="member">User::getNoSiret</ref> Return the SIRET number (company registration number) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>SIRET number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="92" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ae751ee06859dffce0cad08005c42c933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::User::setNoSiret</definition>
        <argsstring>(const QString &amp;noSiret)</argsstring>
        <name>setNoSiret</name>
        <param>
          <type>const QString &amp;</type>
          <declname>noSiret</declname>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1ae751ee06859dffce0cad08005c42c933" kindref="member">User::setNoSiret</ref> Modify the SIRET number (company registration number) <emphasis>noSiret</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noSiret</parametername>
</parameternamelist>
<parameterdescription>
<para>SIRET number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="98" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1adf4c52429656a4f44c15d879caee5b10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Models::User::getWorkspaceName</definition>
        <argsstring>() const </argsstring>
        <name>getWorkspaceName</name>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1adf4c52429656a4f44c15d879caee5b10" kindref="member">User::getWorkspaceName</ref> Return the name of the workspace user. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>workspace name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="104" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ae51aa34e41159fe7e4541a8cfddc50a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::User::setWorkspaceName</definition>
        <argsstring>(const QString &amp;workspaceName)</argsstring>
        <name>setWorkspaceName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>workspaceName</declname>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1ae51aa34e41159fe7e4541a8cfddc50a3" kindref="member">User::setWorkspaceName</ref> Change the current workspace name by the new <emphasis>workspaceName</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>workspaceName</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="110" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1aa9421bda240316f9eebd0145f6dc3eda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Models::User::getWorkspacePath</definition>
        <argsstring>() const </argsstring>
        <name>getWorkspacePath</name>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1aa9421bda240316f9eebd0145f6dc3eda" kindref="member">User::getWorkspacePath</ref> Return the path of the workspace user. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>workspace path </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="116" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1ae62b6cc7c6c5f5ab80b9f066b67afc95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::User::setWorkspacePath</definition>
        <argsstring>(const QString &amp;workspacePath)</argsstring>
        <name>setWorkspacePath</name>
        <param>
          <type>const QString &amp;</type>
          <declname>workspacePath</declname>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1ae62b6cc7c6c5f5ab80b9f066b67afc95" kindref="member">User::setWorkspacePath</ref> Change the current workspace path by the new <emphasis>workspacePath</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>workspacePath</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="122" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1a60d18c2d1df053f1abf1215414f0b4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Models::User::operator==</definition>
        <argsstring>(const User &amp;u)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1a60d18c2d1df053f1abf1215414f0b4b6" kindref="member">User::operator ==</ref> Re-define the operator &quot;==&quot; to compare if the current <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> is the same to the other <bold><ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref></bold> <emphasis>c</emphasis> Return TRUE if both Users are the same, else FALSE. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> to compare </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="130" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="162" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="df/d68/classModels_1_1User_1aa1cdb1f752173aedd5f0c43edcb0b10b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Models::User::operator!=</definition>
        <argsstring>(const User &amp;u)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para><ref refid="df/d68/classModels_1_1User_1a60d18c2d1df053f1abf1215414f0b4b6" kindref="member">User::operator ==</ref> Re-define the operator &quot;!=&quot; to compare if the current <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> is differnt to the other <bold><ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref></bold> <emphasis>c</emphasis> Return TRUE if both Users are different, else FALSE. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> to compare </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="138" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.cpp" bodystart="170" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref> class <bold><ref refid="df/d68/classModels_1_1User" kindref="compound">User</ref></bold> of it application. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Florent Berbie </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="483">
        <label>Models::User</label>
        <link refid="df/d68/classModels_1_1User"/>
        <childnode refid="484" relation="public-inheritance">
        </childnode>
        <childnode refid="485" relation="public-inheritance">
        </childnode>
      </node>
      <node id="485">
        <label>Models::IModel</label>
        <link refid="d0/d9c/classModels_1_1IModel"/>
      </node>
      <node id="484">
        <label>Models::People</label>
        <link refid="de/d0a/classModels_1_1People"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="486">
        <label>Models::User</label>
        <link refid="df/d68/classModels_1_1User"/>
        <childnode refid="487" relation="public-inheritance">
        </childnode>
        <childnode refid="488" relation="public-inheritance">
        </childnode>
      </node>
      <node id="488">
        <label>Models::IModel</label>
        <link refid="d0/d9c/classModels_1_1IModel"/>
      </node>
      <node id="487">
        <label>Models::People</label>
        <link refid="de/d0a/classModels_1_1People"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/FACT-Team/FactDev/src/models/user.h" line="21" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/user.h" bodystart="20" bodyend="145"/>
    <listofallmembers>
      <member refid="d0/d9c/classModels_1_1IModel_1ab4fc86e436edeb4875580c4cd9feeb25" prot="protected" virt="non-virtual"><scope>Models::User</scope><name>_id</name></member>
      <member refid="df/d68/classModels_1_1User_1af650999e2e711d32314e50faaf0a767b" prot="private" virt="non-virtual"><scope>Models::User</scope><name>_noSiret</name></member>
      <member refid="df/d68/classModels_1_1User_1a2811a449926c135f0dd6b7c81ee1d452" prot="private" virt="non-virtual"><scope>Models::User</scope><name>_title</name></member>
      <member refid="d0/d9c/classModels_1_1IModel_1a8958f103202a45a8f77b86acebafe69c" prot="protected" virt="non-virtual"><scope>Models::User</scope><name>_toRemoved</name></member>
      <member refid="df/d68/classModels_1_1User_1a47952911ed24738caa351b71ab278ade" prot="private" virt="non-virtual"><scope>Models::User</scope><name>_workspaceName</name></member>
      <member refid="df/d68/classModels_1_1User_1ade60fdf921120c32b29e737012d9ef77" prot="private" virt="non-virtual"><scope>Models::User</scope><name>_workspacePath</name></member>
      <member refid="df/d68/classModels_1_1User_1ada0daaa6886be3716af6e15d28c01915" prot="public" virt="virtual"><scope>Models::User</scope><name>commit</name></member>
      <member refid="de/d0a/classModels_1_1People_1a4d327556f59357912c54c14cf940151d" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getAddress</name></member>
      <member refid="de/d0a/classModels_1_1People_1a478528b88890758e11887f9d48372680" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getCity</name></member>
      <member refid="de/d0a/classModels_1_1People_1af4d0cf50ce941c262717b6f10b9d4b89" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getCompany</name></member>
      <member refid="de/d0a/classModels_1_1People_1a0df66681e0b8fcf099ad0a05863a8e13" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getCountry</name></member>
      <member refid="df/d68/classModels_1_1User_1abbc8a3a40b527497872240bf39f21314" prot="public" virt="virtual"><scope>Models::User</scope><name>getDataMap</name></member>
      <member refid="de/d0a/classModels_1_1People_1a183e3ac09f44e38b32d7ba72aef85757" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getEmail</name></member>
      <member refid="de/d0a/classModels_1_1People_1a30b8378d221c9f20a66797a526973be9" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getFax</name></member>
      <member refid="de/d0a/classModels_1_1People_1ae7f110985bb461d8be359a135ec3bc48" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getFirstname</name></member>
      <member refid="d0/d9c/classModels_1_1IModel_1a63087bb34da8c38a11109cd775122d31" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getId</name></member>
      <member refid="de/d0a/classModels_1_1People_1ae3e0992f5711b054a10bc50d8965be3c" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getLastname</name></member>
      <member refid="de/d0a/classModels_1_1People_1aaf8d6ac89ea0ae0a1064503f3b9b6dbb" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getMobilePhone</name></member>
      <member refid="df/d68/classModels_1_1User_1a617ee9ede3791842fbf8593f08660d37" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getNoSiret</name></member>
      <member refid="de/d0a/classModels_1_1People_1a4e30c7e027f2be5c8bc7813e37e12f94" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getPhone</name></member>
      <member refid="de/d0a/classModels_1_1People_1a30999a844f67ddef254e2c2343df8946" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getPostalCode</name></member>
      <member refid="df/d68/classModels_1_1User_1a56a37a1b1125c28e8e72c9a3551b7da5" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getTitle</name></member>
      <member refid="df/d68/classModels_1_1User_1adf4c52429656a4f44c15d879caee5b10" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getWorkspaceName</name></member>
      <member refid="df/d68/classModels_1_1User_1aa9421bda240316f9eebd0145f6dc3eda" prot="public" virt="non-virtual"><scope>Models::User</scope><name>getWorkspacePath</name></member>
      <member refid="df/d68/classModels_1_1User_1ab46c7e1841dca66bc01cd95328b97877" prot="public" virt="virtual"><scope>Models::User</scope><name>hydrat</name></member>
      <member refid="d0/d9c/classModels_1_1IModel_1adecabe4161742cfc81ddbadc6706d9e9" prot="public" virt="non-virtual"><scope>Models::User</scope><name>isToRemoved</name></member>
      <member refid="df/d68/classModels_1_1User_1aa1cdb1f752173aedd5f0c43edcb0b10b" prot="public" virt="non-virtual"><scope>Models::User</scope><name>operator!=</name></member>
      <member refid="de/d0a/classModels_1_1People_1afcc4f66db1e1b1deefb849fffe82d616" prot="public" virt="non-virtual" ambiguityscope="Models::People::"><scope>Models::User</scope><name>operator!=</name></member>
      <member refid="df/d68/classModels_1_1User_1a60d18c2d1df053f1abf1215414f0b4b6" prot="public" virt="non-virtual"><scope>Models::User</scope><name>operator==</name></member>
      <member refid="de/d0a/classModels_1_1People_1a1c875989cffc3119ff1f263c7898bbdb" prot="public" virt="non-virtual" ambiguityscope="Models::People::"><scope>Models::User</scope><name>operator==</name></member>
      <member refid="de/d0a/classModels_1_1People_1acdd7ec9d2f9815aeb230ca450cbcdbe3" prot="public" virt="non-virtual"><scope>Models::User</scope><name>People</name></member>
      <member refid="df/d68/classModels_1_1User_1ae0870269116b5bda3b5f1c8527e300be" prot="public" virt="virtual"><scope>Models::User</scope><name>remove</name></member>
      <member refid="de/d0a/classModels_1_1People_1ab4e49bbc2de9ed31276e50e768c9bdee" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setAddress</name></member>
      <member refid="de/d0a/classModels_1_1People_1ab19eae39212a096542ed8c24567f3ca9" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setCity</name></member>
      <member refid="de/d0a/classModels_1_1People_1aded3f48b5afb01c78379c9a63c35d5c3" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setCompany</name></member>
      <member refid="de/d0a/classModels_1_1People_1a3062f5f760ee85553b28b3ef1f15492a" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setCountry</name></member>
      <member refid="de/d0a/classModels_1_1People_1a731376949fa1d08e87c7c6ab53f792ab" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setEmail</name></member>
      <member refid="de/d0a/classModels_1_1People_1adaa1a83318fd0a251cbcc4a93dc01096" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setFax</name></member>
      <member refid="de/d0a/classModels_1_1People_1a0bc1380b8c4bb29f59b09300edd1f354" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setFirstname</name></member>
      <member refid="d0/d9c/classModels_1_1IModel_1ac99cb8ca4004755b1445fb5f66973341" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setId</name></member>
      <member refid="de/d0a/classModels_1_1People_1a550545199147a9947e5c66f9c154bf52" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setLastname</name></member>
      <member refid="de/d0a/classModels_1_1People_1a38e71d8991c2ef70f4f3f4b864913a58" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setMobilePhone</name></member>
      <member refid="df/d68/classModels_1_1User_1ae751ee06859dffce0cad08005c42c933" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setNoSiret</name></member>
      <member refid="de/d0a/classModels_1_1People_1adea0f24c3438d7c65a6df522e3253863" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setPhone</name></member>
      <member refid="de/d0a/classModels_1_1People_1a89ea420d87ce7e32e8fc1b7a83616eaf" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setPostalCode</name></member>
      <member refid="df/d68/classModels_1_1User_1a0fe65ebdee17c2986c874e480e1cb0bd" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setTitle</name></member>
      <member refid="d0/d9c/classModels_1_1IModel_1abfbfbc6c7de50ad4536027a964b2521c" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setToRemoved</name></member>
      <member refid="df/d68/classModels_1_1User_1ae51aa34e41159fe7e4541a8cfddc50a3" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setWorkspaceName</name></member>
      <member refid="df/d68/classModels_1_1User_1ae62b6cc7c6c5f5ab80b9f066b67afc95" prot="public" virt="non-virtual"><scope>Models::User</scope><name>setWorkspacePath</name></member>
      <member refid="df/d68/classModels_1_1User_1ae61c862ac430d25b538601f343f7bf98" prot="public" virt="non-virtual"><scope>Models::User</scope><name>updateFolders</name></member>
      <member refid="df/d68/classModels_1_1User_1ab106b51be814f7d3a055874781f1f2ee" prot="public" virt="non-virtual"><scope>Models::User</scope><name>User</name></member>
      <member refid="df/d68/classModels_1_1User_1a8eb50ce05c34b28cf39ff980066f3113" prot="public" virt="non-virtual"><scope>Models::User</scope><name>User</name></member>
      <member refid="d0/d9c/classModels_1_1IModel_1ab9c12f5b9ae86e00d0f2f7d8d349c4fa" prot="public" virt="virtual"><scope>Models::User</scope><name>~IModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
