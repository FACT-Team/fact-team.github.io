<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="df/d0a/main_8cpp" kind="file">
    <compoundname>main.cpp</compoundname>
    <includes local="no">QApplication</includes>
    <includes local="no">QString</includes>
    <includes local="no">iostream</includes>
    <includes local="no">QDebug</includes>
    <includes refid="dd/da8/testrunner_8h" local="yes">QTestRunner/testrunner.h</includes>
    <includes refid="d8/d9c/database_8h" local="yes">database/database.h</includes>
    <includes refid="df/dd6/accessdatabase_8h" local="yes">database/accessdatabase.h</includes>
    <includes local="no">QtCore/QDebug</includes>
    <incdepgraph>
      <node id="5343">
        <label>list</label>
      </node>
      <node id="5350">
        <label>QSettings</label>
      </node>
      <node id="5345">
        <label>QtSql/QSql</label>
      </node>
      <node id="5359">
        <label>QMessageBox</label>
      </node>
      <node id="5356">
        <label>exceptions/dbexception.h</label>
        <link refid="da/de0/dbexception_8h_source"/>
        <childnode refid="5355" relation="include">
        </childnode>
        <childnode refid="5357" relation="include">
        </childnode>
        <childnode refid="5337" relation="include">
        </childnode>
        <childnode refid="5358" relation="include">
        </childnode>
        <childnode refid="5359" relation="include">
        </childnode>
        <childnode refid="5360" relation="include">
        </childnode>
      </node>
      <node id="5346">
        <label>QtSql/QSqlQuery</label>
      </node>
      <node id="5362">
        <label>parameters.h</label>
        <link refid="d6/d3b/parameters_8h_source"/>
        <childnode refid="5336" relation="include">
        </childnode>
      </node>
      <node id="5344">
        <label>database/database.h</label>
        <link refid="d8/d9c/database_8h_source"/>
        <childnode refid="5345" relation="include">
        </childnode>
        <childnode refid="5346" relation="include">
        </childnode>
        <childnode refid="5347" relation="include">
        </childnode>
        <childnode refid="5348" relation="include">
        </childnode>
        <childnode refid="5349" relation="include">
        </childnode>
        <childnode refid="5350" relation="include">
        </childnode>
        <childnode refid="5351" relation="include">
        </childnode>
        <childnode refid="5352" relation="include">
        </childnode>
        <childnode refid="5353" relation="include">
        </childnode>
        <childnode refid="5354" relation="include">
        </childnode>
        <childnode refid="5355" relation="include">
        </childnode>
        <childnode refid="5356" relation="include">
        </childnode>
        <childnode refid="5360" relation="include">
        </childnode>
        <childnode refid="5362" relation="include">
        </childnode>
        <childnode refid="5363" relation="include">
        </childnode>
      </node>
      <node id="5358">
        <label>stdexcept</label>
      </node>
      <node id="5349">
        <label>QStandardItemModel</label>
      </node>
      <node id="5341">
        <label>QSharedPointer</label>
      </node>
      <node id="5360">
        <label>utils/log.h</label>
        <link refid="d7/d7f/log_8h_source"/>
        <childnode refid="5354" relation="include">
        </childnode>
        <childnode refid="5352" relation="include">
        </childnode>
        <childnode refid="5353" relation="include">
        </childnode>
        <childnode refid="5361" relation="include">
        </childnode>
        <childnode refid="5338" relation="include">
        </childnode>
        <childnode refid="5350" relation="include">
        </childnode>
        <childnode refid="5336" relation="include">
        </childnode>
        <childnode refid="5362" relation="include">
        </childnode>
      </node>
      <node id="5348">
        <label>QtSql/QSqlRecord</label>
      </node>
      <node id="5351">
        <label>QStandardItem</label>
      </node>
      <node id="5355">
        <label>exception</label>
      </node>
      <node id="5363">
        <label>database/accessdatabase.h</label>
        <link refid="df/dd6/accessdatabase_8h_source"/>
        <childnode refid="5336" relation="include">
        </childnode>
        <childnode refid="5350" relation="include">
        </childnode>
        <childnode refid="5338" relation="include">
        </childnode>
      </node>
      <node id="5335">
        <label>QApplication</label>
      </node>
      <node id="5338">
        <label>QDebug</label>
      </node>
      <node id="5340">
        <label>QTest</label>
      </node>
      <node id="5357">
        <label>sstream</label>
      </node>
      <node id="5352">
        <label>QDate</label>
      </node>
      <node id="5336">
        <label>QString</label>
      </node>
      <node id="5354">
        <label>QFile</label>
      </node>
      <node id="5347">
        <label>QtSql/QSqlError</label>
      </node>
      <node id="5337">
        <label>iostream</label>
      </node>
      <node id="5361">
        <label>QTextStream</label>
      </node>
      <node id="5364">
        <label>QtCore/QDebug</label>
      </node>
      <node id="5339">
        <label>QTestRunner/testrunner.h</label>
        <link refid="dd/da8/testrunner_8h_source"/>
        <childnode refid="5340" relation="include">
        </childnode>
        <childnode refid="5341" relation="include">
        </childnode>
        <childnode refid="5342" relation="include">
        </childnode>
        <childnode refid="5343" relation="include">
        </childnode>
        <childnode refid="5337" relation="include">
        </childnode>
      </node>
      <node id="5342">
        <label>algorithm</label>
      </node>
      <node id="5334">
        <label>/home/travis/build/FACT-Team/FactDev/tests/main.cpp</label>
        <link refid="main.cpp"/>
        <childnode refid="5335" relation="include">
        </childnode>
        <childnode refid="5336" relation="include">
        </childnode>
        <childnode refid="5337" relation="include">
        </childnode>
        <childnode refid="5338" relation="include">
        </childnode>
        <childnode refid="5339" relation="include">
        </childnode>
        <childnode refid="5344" relation="include">
        </childnode>
        <childnode refid="5363" relation="include">
        </childnode>
        <childnode refid="5364" relation="include">
        </childnode>
      </node>
      <node id="5353">
        <label>QCoreApplication</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/d0a/main_8cpp_1a6ed3f3dbff00a609dc5d53c90e91fd68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mysqlExecution</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>mysqlExecution</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/tests/main.cpp" line="16" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/tests/main.cpp" bodystart="43" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="df/d0a/main_8cpp_1a207a338c3486f57dd3d4f156a24fd421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sqliteExecution</definition>
        <argsstring>(QCoreApplication &amp;a)</argsstring>
        <name>sqliteExecution</name>
        <param>
          <type>QCoreApplication &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/tests/main.cpp" line="17" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/tests/main.cpp" bodystart="67" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="df/d0a/main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/tests/main.cpp" line="22" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/tests/main.cpp" bodystart="22" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Thanks<sp/>to</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>https://marcoarena.wordpress.com/2012/06/23/increase-your-qtest-productivity</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>@aroquemaurel</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QApplication&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;QTestRunner/testrunner.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;database/database.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;database/accessdatabase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mysqlExecution(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sqliteExecution(QCoreApplication&amp;<sp/>a);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>QCoreApplication<sp/>a(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sqliteExecution(a)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mysqlExecution(argc,<sp/>argv)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>tests<sp/>passed<sp/>!<sp/>\\o/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>tests<sp/>failed…&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mysqlExecution(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**argv)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;===<sp/>Execution<sp/>des<sp/>tests<sp/>de<sp/>FactDev<sp/>v&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>QString::number(<ref refid="de/d0a/classParameters_1a279ee24140c761de46178daa8960bdc8" kindref="member">Parameters::VERSION</ref>).toStdString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>avec<sp/>MySQL<sp/>===&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_address<sp/>=<sp/>argv[1];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_userDb<sp/>=<sp/>argv[2];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_password<sp/>=<sp/>argv[3];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_dbName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FactDev&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_exists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_dbType<sp/>=<sp/>Databases::MYSQL;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/db0/classDatabases_1_1Database_1a3cf57f0af08ad3f4d588d59eafcadb56" kindref="member">Databases::Database::instance</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>parameters<sp/>!<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db0/classDatabases_1_1Database_1a3cf57f0af08ad3f4d588d59eafcadb56" kindref="member">Databases::Database::instance</ref>()-&gt;<ref refid="dd/db0/classDatabases_1_1Database_1a52c30975504e35c7c475a52817d66b73" kindref="member">cleanDatabase</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sqliteExecution(QCoreApplication&amp;<sp/>a)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;===<sp/>Execution<sp/>des<sp/>tests<sp/>de<sp/>FactDev<sp/>v&quot;</highlight><highlight class="normal">+QString::number(<ref refid="de/d0a/classParameters_1a279ee24140c761de46178daa8960bdc8" kindref="member">Parameters::VERSION</ref>).toStdString()+</highlight><highlight class="stringliteral">&quot;<sp/>avec<sp/>SQLite<sp/>===&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>f(QString(a.applicationDirPath()+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+<ref refid="de/d0a/classParameters_1a80b98bd51d910bcc2203afcacbc7df87" kindref="member">Parameters::DB_FILENAME</ref>));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>f.remove();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_dbType<sp/>=<sp/>Databases::SQLITE;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>Databases::AccessDatabase::_exists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db0/classDatabases_1_1Database_1a3cf57f0af08ad3f4d588d59eafcadb56" kindref="member">Databases::Database::instance</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;--<sp/>Clean<sp/>of<sp/>database&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/db0/classDatabases_1_1Database_1a3cf57f0af08ad3f4d588d59eafcadb56" kindref="member">Databases::Database::instance</ref>()-&gt;<ref refid="dd/db0/classDatabases_1_1Database_1a52c30975504e35c7c475a52817d66b73" kindref="member">cleanDatabase</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="dd/db0/classDatabases_1_1Database_1a3cf57f0af08ad3f4d588d59eafcadb56" kindref="member">Databases::Database::instance</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/FACT-Team/FactDev/tests/main.cpp"/>
  </compounddef>
</doxygen>
