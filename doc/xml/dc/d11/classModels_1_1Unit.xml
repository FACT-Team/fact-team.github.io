<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dc/d11/classModels_1_1Unit" kind="class" prot="public">
    <compoundname>Models::Unit</compoundname>
    <includes refid="d1/da2/unit_8h" local="no">unit.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/d11/classModels_1_1Unit_1abaa83b2739aeb131d3919e5001791a3c" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d20/namespaceModels_1a999532b323a4b63ff54013326c83f040" kindref="member">TypeUnit</ref></type>
        <definition>TypeUnit Models::Unit::_type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
<para>The unit type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="66" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d11/classModels_1_1Unit_1ab6dc4f5dd689927604f3ac168f3c1552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Models::Unit::Unit</definition>
        <argsstring>(TypeUnit type)</argsstring>
        <name>Unit</name>
        <param>
          <type><ref refid="dd/d20/namespaceModels_1a999532b323a4b63ff54013326c83f040" kindref="member">TypeUnit</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref> Construct an unit with init type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit Type; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="22" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="dc/d11/classModels_1_1Unit_1a34e1eddc3b72967266106fa506fb583c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Models::Unit::Unit</definition>
        <argsstring>()</argsstring>
        <name>Unit</name>
        <briefdescription>
<para><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref> Construct an unit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="27" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="dc/d11/classModels_1_1Unit_1a0eeeb628ada11c3809e82634ea24e2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Models::Unit::toString</definition>
        <argsstring>(const bool plurial=false)</argsstring>
        <name>toString</name>
        <param>
          <type>const bool</type>
          <declname>plurial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>toString Return String for unit type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The unit in String </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="33" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.cpp" bodystart="14" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="dc/d11/classModels_1_1Unit_1aa7aa58c11b9464c99595ccc755fcf7c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d20/namespaceModels_1a999532b323a4b63ff54013326c83f040" kindref="member">TypeUnit</ref></type>
        <definition>TypeUnit Models::Unit::getype</definition>
        <argsstring>() const </argsstring>
        <name>getype</name>
        <briefdescription>
<para>getype The unit Type </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The unit Type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="39" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="dc/d11/classModels_1_1Unit_1ad7e3209d943fb8ee06b5d132173710c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::Unit::setType</definition>
        <argsstring>(const TypeUnit &amp;type)</argsstring>
        <name>setType</name>
        <param>
          <type>const <ref refid="dd/d20/namespaceModels_1a999532b323a4b63ff54013326c83f040" kindref="member">TypeUnit</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>setType Change the unit Type </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The new unit type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="45" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="dc/d11/classModels_1_1Unit_1a4554ce9d88e0ded72688e8085f5feb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Models::Unit::operator==</definition>
        <argsstring>(const Unit &amp;u)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>operator == define the operator &quot;==&quot; to compare two <bold><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref></bold> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the <bold><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref></bold> to compare with the current <bold><ref refid="d5/dd1/classModels_1_1Contributory" kindref="compound">Contributory</ref></bold> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the <bold><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref></bold> are equals else false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="54" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="dc/d11/classModels_1_1Unit_1a3fda8038ee8876979b40895c6de7fc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Models::Unit::operator!=</definition>
        <argsstring>(const Unit &amp;u)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>operator != define the operator &quot;!=&quot; to compare two <bold><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref></bold> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the <bold><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref></bold> to compare with the current <bold><ref refid="d5/dd1/classModels_1_1Contributory" kindref="compound">Contributory</ref></bold> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the <bold><ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref></bold> are different else false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="63" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="dc/d11/classModels_1_1Unit" kindref="compound">Unit</ref> class An unity for billing calculs. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="559">
        <label>Models::Unit</label>
        <link refid="dc/d11/classModels_1_1Unit"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" line="16" column="1" bodyfile="/home/travis/build/FACT-Team/FactDev/src/models/unit.h" bodystart="15" bodyend="67"/>
    <listofallmembers>
      <member refid="dc/d11/classModels_1_1Unit_1abaa83b2739aeb131d3919e5001791a3c" prot="private" virt="non-virtual"><scope>Models::Unit</scope><name>_type</name></member>
      <member refid="dc/d11/classModels_1_1Unit_1aa7aa58c11b9464c99595ccc755fcf7c6" prot="public" virt="non-virtual"><scope>Models::Unit</scope><name>getype</name></member>
      <member refid="dc/d11/classModels_1_1Unit_1a3fda8038ee8876979b40895c6de7fc49" prot="public" virt="non-virtual"><scope>Models::Unit</scope><name>operator!=</name></member>
      <member refid="dc/d11/classModels_1_1Unit_1a4554ce9d88e0ded72688e8085f5feb3f" prot="public" virt="non-virtual"><scope>Models::Unit</scope><name>operator==</name></member>
      <member refid="dc/d11/classModels_1_1Unit_1ad7e3209d943fb8ee06b5d132173710c5" prot="public" virt="non-virtual"><scope>Models::Unit</scope><name>setType</name></member>
      <member refid="dc/d11/classModels_1_1Unit_1a0eeeb628ada11c3809e82634ea24e2a7" prot="public" virt="non-virtual"><scope>Models::Unit</scope><name>toString</name></member>
      <member refid="dc/d11/classModels_1_1Unit_1ab6dc4f5dd689927604f3ac168f3c1552" prot="public" virt="non-virtual"><scope>Models::Unit</scope><name>Unit</name></member>
      <member refid="dc/d11/classModels_1_1Unit_1a34e1eddc3b72967266106fa506fb583c" prot="public" virt="non-virtual"><scope>Models::Unit</scope><name>Unit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
