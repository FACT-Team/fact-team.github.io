<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="d9/df4/billingdatabasetest_8cpp" kind="file">
    <compoundname>billingdatabasetest.cpp</compoundname>
    <includes refid="d9/d01/billingdatabasetest_8h" local="yes">billingdatabasetest.h</includes>
    <includes refid="d2/dd1/billingdatabase_8h" local="yes">database/billingdatabase.h</includes>
    <incdepgraph>
      <node id="5620">
        <label>list</label>
      </node>
      <node id="5625">
        <label>QMap</label>
      </node>
      <node id="5628">
        <label>models/imodel.h</label>
        <link refid="df/d78/imodel_8h_source"/>
        <childnode refid="5629" relation="include">
        </childnode>
      </node>
      <node id="5664">
        <label>QSettings</label>
      </node>
      <node id="5679">
        <label>database/billingdatabase.h</label>
        <link refid="d2/dd1/billingdatabase_8h_source"/>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5658" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
        <childnode refid="5668" relation="include">
        </childnode>
        <childnode refid="5680" relation="include">
        </childnode>
      </node>
      <node id="5638">
        <label>utils/double.h</label>
      </node>
      <node id="5659">
        <label>QtSql/QSql</label>
      </node>
      <node id="5653">
        <label>QMessageBox</label>
      </node>
      <node id="5670">
        <label>QObject</label>
      </node>
      <node id="5641">
        <label>QStandardPaths</label>
      </node>
      <node id="5657">
        <label>exceptions/dbexception.h</label>
        <link refid="da/de0/dbexception_8h_source"/>
        <childnode refid="5650" relation="include">
        </childnode>
        <childnode refid="5651" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5652" relation="include">
        </childnode>
        <childnode refid="5653" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
      </node>
      <node id="5626">
        <label>QList</label>
      </node>
      <node id="5639">
        <label>models/user.h</label>
        <link refid="d8/ddb/user_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
        <childnode refid="5641" relation="include">
        </childnode>
        <childnode refid="5628" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5631" relation="include">
        </childnode>
        <childnode refid="5634" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
        <childnode refid="5648" relation="include">
        </childnode>
      </node>
      <node id="5649">
        <label>exceptions/fileexception.h</label>
        <link refid="d4/d79/fileexception_8h_source"/>
        <childnode refid="5650" relation="include">
        </childnode>
        <childnode refid="5651" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
        <childnode refid="5652" relation="include">
        </childnode>
        <childnode refid="5653" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
      </node>
      <node id="5660">
        <label>QtSql/QSqlQuery</label>
      </node>
      <node id="5647">
        <label>parameters.h</label>
        <link refid="d6/d3b/parameters_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
      </node>
      <node id="5658">
        <label>database.h</label>
        <link refid="d8/d9c/database_8h_source"/>
        <childnode refid="5659" relation="include">
        </childnode>
        <childnode refid="5660" relation="include">
        </childnode>
        <childnode refid="5661" relation="include">
        </childnode>
        <childnode refid="5662" relation="include">
        </childnode>
        <childnode refid="5663" relation="include">
        </childnode>
        <childnode refid="5664" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5624" relation="include">
        </childnode>
        <childnode refid="5644" relation="include">
        </childnode>
        <childnode refid="5643" relation="include">
        </childnode>
        <childnode refid="5650" relation="include">
        </childnode>
        <childnode refid="5657" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
        <childnode refid="5647" relation="include">
        </childnode>
        <childnode refid="5665" relation="include">
        </childnode>
      </node>
      <node id="5652">
        <label>stdexcept</label>
      </node>
      <node id="5663">
        <label>QStandardItemModel</label>
      </node>
      <node id="5618">
        <label>QSharedPointer</label>
      </node>
      <node id="5642">
        <label>utils/log.h</label>
        <link refid="d7/d7f/log_8h_source"/>
        <childnode refid="5643" relation="include">
        </childnode>
        <childnode refid="5624" relation="include">
        </childnode>
        <childnode refid="5644" relation="include">
        </childnode>
        <childnode refid="5645" relation="include">
        </childnode>
        <childnode refid="5646" relation="include">
        </childnode>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5647" relation="include">
        </childnode>
      </node>
      <node id="5654">
        <label>models/contributorieslist.h</label>
        <link refid="dd/d0f/contributorieslist_8h_source"/>
        <childnode refid="5625" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5655" relation="include">
        </childnode>
        <childnode refid="5639" relation="include">
        </childnode>
        <childnode refid="5637" relation="include">
        </childnode>
        <childnode refid="5638" relation="include">
        </childnode>
      </node>
      <node id="5662">
        <label>QtSql/QSqlRecord</label>
      </node>
      <node id="5632">
        <label>QStandardItem</label>
      </node>
      <node id="5650">
        <label>exception</label>
      </node>
      <node id="5634">
        <label>models/people.h</label>
        <link refid="d2/d90/people_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5633" relation="include">
        </childnode>
        <childnode refid="5628" relation="include">
        </childnode>
      </node>
      <node id="5627">
        <label>QIcon</label>
      </node>
      <node id="5680">
        <label>gui/widgets/widgetsmodels/billingstablemodel.h</label>
        <link refid="da/dfc/billingstablemodel_8h_source"/>
        <childnode refid="5670" relation="include">
        </childnode>
        <childnode refid="5671" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
      </node>
      <node id="5668">
        <label>utils/string.h</label>
        <link refid="da/d66/string_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
      </node>
      <node id="5635">
        <label>models/contributory.h</label>
        <link refid="d8/dee/contributory_8h_source"/>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5628" relation="include">
        </childnode>
        <childnode refid="5636" relation="include">
        </childnode>
        <childnode refid="5637" relation="include">
        </childnode>
        <childnode refid="5638" relation="include">
        </childnode>
      </node>
      <node id="5665">
        <label>database/accessdatabase.h</label>
        <link refid="df/dd6/accessdatabase_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5664" relation="include">
        </childnode>
        <childnode refid="5646" relation="include">
        </childnode>
      </node>
      <node id="5667">
        <label>database/projectdatabase.h</label>
        <link refid="d9/dfd/projectdatabase_8h_source"/>
        <childnode refid="5658" relation="include">
        </childnode>
        <childnode refid="5657" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5668" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
        <childnode refid="5669" relation="include">
        </childnode>
      </node>
      <node id="5676">
        <label>QtCore/QVariant</label>
      </node>
      <node id="5637">
        <label>models/calculable.h</label>
        <link refid="de/dfa/calculable_8h_source"/>
      </node>
      <node id="5677">
        <label>generator/pdfgenerator.h</label>
        <link refid="de/d42/pdfgenerator_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5678" relation="include">
        </childnode>
        <childnode refid="5643" relation="include">
        </childnode>
      </node>
      <node id="5648">
        <label>utils/directories.h</label>
        <link refid="de/ddd/directories_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5640" relation="include">
        </childnode>
        <childnode refid="5649" relation="include">
        </childnode>
      </node>
      <node id="5673">
        <label>libs/qt-mustache/src/mustache.h</label>
        <link refid="d9/d77/mustache_8h_source"/>
        <childnode refid="5674" relation="include">
        </childnode>
        <childnode refid="5675" relation="include">
        </childnode>
        <childnode refid="5676" relation="include">
        </childnode>
      </node>
      <node id="5630">
        <label>models/project.h</label>
        <link refid="dc/d8d/project_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5624" relation="include">
        </childnode>
        <childnode refid="5618" relation="include">
        </childnode>
        <childnode refid="5628" relation="include">
        </childnode>
        <childnode refid="5631" relation="include">
        </childnode>
      </node>
      <node id="5646">
        <label>QDebug</label>
      </node>
      <node id="5614">
        <label>billingdatabasetest.h</label>
        <link refid="d9/d01/billingdatabasetest_8h_source"/>
        <childnode refid="5615" relation="include">
        </childnode>
        <childnode refid="5616" relation="include">
        </childnode>
        <childnode refid="5622" relation="include">
        </childnode>
      </node>
      <node id="5655">
        <label>models/rate.h</label>
        <link refid="d5/d79/rate_8h_source"/>
        <childnode refid="5656" relation="include">
        </childnode>
        <childnode refid="5639" relation="include">
        </childnode>
      </node>
      <node id="5674">
        <label>QtCore/QStack</label>
      </node>
      <node id="5617">
        <label>QTest</label>
      </node>
      <node id="5629">
        <label>QVariantHash</label>
      </node>
      <node id="5651">
        <label>sstream</label>
      </node>
      <node id="5624">
        <label>QDate</label>
      </node>
      <node id="5623">
        <label>QString</label>
      </node>
      <node id="5666">
        <label>database/contributorydatabase.h</label>
        <link refid="d2/deb/contributorydatabase_8h_source"/>
        <childnode refid="5658" relation="include">
        </childnode>
        <childnode refid="5667" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5654" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
        <childnode refid="5668" relation="include">
        </childnode>
      </node>
      <node id="5643">
        <label>QFile</label>
      </node>
      <node id="5661">
        <label>QtSql/QSqlError</label>
      </node>
      <node id="5672">
        <label>generator/texgenerator.h</label>
        <link refid="d6/dc3/texgenerator_8h_source"/>
        <childnode refid="5622" relation="include">
        </childnode>
        <childnode refid="5639" relation="include">
        </childnode>
        <childnode refid="5673" relation="include">
        </childnode>
      </node>
      <node id="5621">
        <label>iostream</label>
      </node>
      <node id="5678">
        <label>QProcess</label>
      </node>
      <node id="5675">
        <label>QtCore/QString</label>
      </node>
      <node id="5636">
        <label>models/unit.h</label>
        <link refid="d1/da2/unit_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
      </node>
      <node id="5622">
        <label>models/billing.h</label>
        <link refid="d4/dfe/billing_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5624" relation="include">
        </childnode>
        <childnode refid="5625" relation="include">
        </childnode>
        <childnode refid="5626" relation="include">
        </childnode>
        <childnode refid="5627" relation="include">
        </childnode>
        <childnode refid="5628" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5635" relation="include">
        </childnode>
        <childnode refid="5639" relation="include">
        </childnode>
        <childnode refid="5654" relation="include">
        </childnode>
        <childnode refid="5637" relation="include">
        </childnode>
        <childnode refid="5666" relation="include">
        </childnode>
        <childnode refid="5672" relation="include">
        </childnode>
        <childnode refid="5677" relation="include">
        </childnode>
        <childnode refid="5638" relation="include">
        </childnode>
      </node>
      <node id="5633">
        <label>QPixmap</label>
      </node>
      <node id="5640">
        <label>QDir</label>
      </node>
      <node id="5645">
        <label>QTextStream</label>
      </node>
      <node id="5616">
        <label>QTestRunner/testrunner.h</label>
        <link refid="dd/da8/testrunner_8h_source"/>
        <childnode refid="5617" relation="include">
        </childnode>
        <childnode refid="5618" relation="include">
        </childnode>
        <childnode refid="5619" relation="include">
        </childnode>
        <childnode refid="5620" relation="include">
        </childnode>
        <childnode refid="5621" relation="include">
        </childnode>
      </node>
      <node id="5631">
        <label>models/customer.h</label>
        <link refid="d3/d35/customer_8h_source"/>
        <childnode refid="5623" relation="include">
        </childnode>
        <childnode refid="5632" relation="include">
        </childnode>
        <childnode refid="5633" relation="include">
        </childnode>
        <childnode refid="5634" relation="include">
        </childnode>
      </node>
      <node id="5619">
        <label>algorithm</label>
      </node>
      <node id="5656">
        <label>database/ratedatabase.h</label>
        <link refid="d5/d8a/ratedatabase_8h_source"/>
        <childnode refid="5657" relation="include">
        </childnode>
        <childnode refid="5658" relation="include">
        </childnode>
        <childnode refid="5655" relation="include">
        </childnode>
      </node>
      <node id="5671">
        <label>QAbstractTableModel</label>
      </node>
      <node id="5669">
        <label>gui/widgets/widgetsmodels/projectstablemodel.h</label>
        <link refid="dc/d1a/projectstablemodel_8h_source"/>
        <childnode refid="5670" relation="include">
        </childnode>
        <childnode refid="5671" relation="include">
        </childnode>
        <childnode refid="5630" relation="include">
        </childnode>
        <childnode refid="5642" relation="include">
        </childnode>
      </node>
      <node id="5613">
        <label>/home/travis/build/FACT-Team/FactDev/tests/database/billingdatabasetest.cpp</label>
        <link refid="billingdatabasetest.cpp"/>
        <childnode refid="5614" relation="include">
        </childnode>
        <childnode refid="5679" relation="include">
        </childnode>
      </node>
      <node id="5615">
        <label>QtTest/QtTest</label>
      </node>
      <node id="5644">
        <label>QCoreApplication</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;billingdatabasetest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;database/billingdatabase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">BillingDatabaseTest::BillingDatabaseTest()</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::setup()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>b1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Models::Billing</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d0/d9c/classModels_1_1IModel_1ac99cb8ca4004755b1445fb5f66973341" kindref="member">setId</ref>(101);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1ae8db0fe5fe273fad31e2f846b5b891cb" kindref="member">setDate</ref>(QDate(2012,12,21));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1adb5cf4382150387f10bb6b774ace6bc8" kindref="member">setDescription</ref>(</highlight><highlight class="stringliteral">&quot;Création<sp/>des<sp/>donuts<sp/>dorés&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1a2b43e0c657a9e717c9d2c091d222369e" kindref="member">setNumber</ref>(51);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1ae20cea169abdffa5daaa368547425928" kindref="member">setTitle</ref>(</highlight><highlight class="stringliteral">&quot;Maître<sp/>donut&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1aff8b71426c02bc97f0a724ef762cd42e" kindref="member">setIsBilling</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d0/d9c/classModels_1_1IModel_1abfbfbc6c7de50ad4536027a964b2521c" kindref="member">setToRemoved</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1a99cf8c1b7435fe268b8fa9257cad6c56" kindref="member">setIsPaid</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::insert()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>setup();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lastInsert<sp/>=<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a656c622366884194a6823b679d7d2f63" kindref="member">addBilling</ref>(*b1);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref>*<sp/>b2<sp/>=<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a835d4ca35a046fe1d0b336a1b8cf8f85" kindref="member">getBilling</ref>(_lastInsert);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(*b1<sp/>==<sp/>*b2);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::remove()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1aa6869fce7290e50723b5db5e125e9a6e" kindref="member">removeBilling</ref>(_lastInsert);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref><sp/>*b2<sp/>=<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a835d4ca35a046fe1d0b336a1b8cf8f85" kindref="member">getBilling</ref>(_lastInsert);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(b2<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::update()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lastInsert<sp/>=<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a656c622366884194a6823b679d7d2f63" kindref="member">addBilling</ref>(*b1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d0/d9c/classModels_1_1IModel_1ac99cb8ca4004755b1445fb5f66973341" kindref="member">setId</ref>(_lastInsert);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1ae20cea169abdffa5daaa368547425928" kindref="member">setTitle</ref>(</highlight><highlight class="stringliteral">&quot;Paladin<sp/>donut&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1adb5cf4382150387f10bb6b774ace6bc8" kindref="member">setDescription</ref>(</highlight><highlight class="stringliteral">&quot;Création<sp/>des<sp/>donuts<sp/>platines&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a74643c7e242cfe6fc294985984d6a65f" kindref="member">updateBilling</ref>(*b1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref><sp/>*b2<sp/>=<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a835d4ca35a046fe1d0b336a1b8cf8f85" kindref="member">getBilling</ref>(_lastInsert);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(*b1<sp/>==<sp/>*b2);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::selectBillingNotFound()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>setup();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getBilling(321654)<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::selectBillingFound()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref><sp/>*b3<sp/>=<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a835d4ca35a046fe1d0b336a1b8cf8f85" kindref="member">getBilling</ref>(1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d0/d9c/classModels_1_1IModel_1ac99cb8ca4004755b1445fb5f66973341" kindref="member">setId</ref>(1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1ae20cea169abdffa5daaa368547425928" kindref="member">setTitle</ref>(</highlight><highlight class="stringliteral">&quot;Coucou&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1adb5cf4382150387f10bb6b774ace6bc8" kindref="member">setDescription</ref>(</highlight><highlight class="stringliteral">&quot;Mon<sp/>super<sp/>devis<sp/>de<sp/>la<sp/>mort<sp/>qui<sp/>rox<sp/>du<sp/>poulet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1a2b43e0c657a9e717c9d2c091d222369e" kindref="member">setNumber</ref>(1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1aff8b71426c02bc97f0a724ef762cd42e" kindref="member">setIsBilling</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;<ref refid="d4/d5c/classModels_1_1Billing_1ae8db0fe5fe273fad31e2f846b5b891cb" kindref="member">setDate</ref>(QDate(2015,02,13));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(*b1<sp/>==<sp/>*b3);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::addBillingProject()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>project<sp/>=<sp/>1,<sp/>billing<sp/>=<sp/>1,<sp/>contributory<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1ab4eb6ce0f1126599012912d4869ad8b8" kindref="member">addBillingProject</ref>(project,billing,contributory);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSqlQuery<sp/>q;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.prepare(</highlight><highlight class="stringliteral">&quot;SELECT<sp/>*<sp/>from<sp/>BillingProject<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WHERE<sp/>idProject=1<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AND<sp/>idBilling=1<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AND<sp/>idContributory=1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!q.exec())<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>selectionner<sp/>le<sp/>BillingProject&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BddBillingDatabaseTest::addBillingProject&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Databases::Database::instance()-&gt;lastError(q)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.3);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.first();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(q.value(</highlight><highlight class="stringliteral">&quot;idProject&quot;</highlight><highlight class="normal">).toInt()==project<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.value(</highlight><highlight class="stringliteral">&quot;idBilling&quot;</highlight><highlight class="normal">).toInt()==billing<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.value(</highlight><highlight class="stringliteral">&quot;idContributory&quot;</highlight><highlight class="normal">).toInt()==contributory);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::removeBillingProject()</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>project<sp/>=<sp/>1,<sp/>billing<sp/>=<sp/>1,<sp/>contributory<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1ad6320bcb8053fc0097939221546f7ecf" kindref="member">removeBillingProject</ref>(project,billing,contributory);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSqlQuery<sp/>q;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.prepare(</highlight><highlight class="stringliteral">&quot;SELECT<sp/>*<sp/>from<sp/>BillingProject<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WHERE<sp/>idProject=1<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AND<sp/>idBilling=1<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AND<sp/>idContributory=1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!q.exec())<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>(</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>selectionner<sp/>le<sp/>BillingProject&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BddBillingDatabaseTest::addBillingProject&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Databases::Database::instance()-&gt;lastError(q)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.3);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.first();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(q.isNull(0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.isNull(1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.isNull(2));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getMaxBillingNumber()</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(29,<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getMaxBillingNumber());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getMaxQuoteNumber()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(51,<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getMaxQuoteNumber());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getMaxBillingNumberOfCustomer()</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//client<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(5,<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getMaxBillingNumberOfCustomer(17));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getMaxQuoteNumberOfCustomer()</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(4,<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getMaxQuoteNumberOfCustomer(17));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getBilling()</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSqlQuery<sp/>q;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.prepare(</highlight><highlight class="stringliteral">&quot;SELECT<sp/>idBilling,<sp/>title,<sp/>description,<sp/>number,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;isBilling,<sp/>date,<sp/>isPaid<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FROM<sp/>Billing<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WHERE<sp/>idBilling<sp/>=<sp/>:idBilling<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.bindValue(</highlight><highlight class="stringliteral">&quot;:idBilling&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!q.exec())<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>récupérer<sp/>les<sp/>Factures/Devis&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BddCustomer::getBillingsTable&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Databases::Database::lastError(q)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.3);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.first();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref><sp/>b<sp/>=<sp/>*<ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a835d4ca35a046fe1d0b336a1b8cf8f85" kindref="member">getBilling</ref>(q);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test<sp/>=<sp/>b.<ref refid="d0/d9c/classModels_1_1IModel_1a63087bb34da8c38a11109cd775122d31" kindref="member">getId</ref>()<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1a15cd358ce3cab05668c62c0771afdb85" kindref="member">getTitle</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Coucou&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1a5802215da8f4407457b8aeb7be525c65" kindref="member">getDescription</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Mon<sp/>super<sp/>devis<sp/>de<sp/>la<sp/>mort<sp/>qui<sp/>rox<sp/>du<sp/>poulet&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1a48c6e28a4aec13f8ed6b3ebbab837f0b" kindref="member">getNumber</ref>()<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1af0d1f0132d0902fb96456d0a9018b701" kindref="member">getDate</ref>().year()<sp/>==<sp/>2015</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1af0d1f0132d0902fb96456d0a9018b701" kindref="member">getDate</ref>().day()<sp/>==<sp/>13</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1af0d1f0132d0902fb96456d0a9018b701" kindref="member">getDate</ref>().month()<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1ab2f9bd62e920be8c68313e35bbcabd46" kindref="member">isPaid</ref>()<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(b.<ref refid="d0/d9c/classModels_1_1IModel_1a63087bb34da8c38a11109cd775122d31" kindref="member">getId</ref>()<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1a15cd358ce3cab05668c62c0771afdb85" kindref="member">getTitle</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Coucou&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1a5802215da8f4407457b8aeb7be525c65" kindref="member">getDescription</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Mon<sp/>super<sp/>devis<sp/>de<sp/>la<sp/>mort<sp/>qui<sp/>rox<sp/>du<sp/>poulet&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1a48c6e28a4aec13f8ed6b3ebbab837f0b" kindref="member">getNumber</ref>()<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1af0d1f0132d0902fb96456d0a9018b701" kindref="member">getDate</ref>().year()<sp/>==<sp/>2015</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1af0d1f0132d0902fb96456d0a9018b701" kindref="member">getDate</ref>().day()<sp/>==<sp/>13</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1af0d1f0132d0902fb96456d0a9018b701" kindref="member">getDate</ref>().month()<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>b.<ref refid="d4/d5c/classModels_1_1Billing_1ab2f9bd62e920be8c68313e35bbcabd46" kindref="member">isPaid</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getAllBillingsOnly()</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>billing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref><sp/>b<sp/>:<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getBillsPaid(23))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b.<ref refid="d4/d5c/classModels_1_1Billing_1ab03dd29a9812a995355a1d93318f348f" kindref="member">isBilling</ref>())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>billing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/>QVERIFY(billing);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getBillingsBetweenDates()</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Billing&gt;<sp/>bills;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Billing&gt;<sp/>bills2;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>bills.append(<ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref>(1));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>bills.append(<ref refid="d4/d5c/classModels_1_1Billing" kindref="compound">Billing</ref>(2));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>bills2<sp/>=<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1ae4300e4e8f5587facf0fd370b4178a79" kindref="member">getBillsBetweenDates</ref>(QDate(2015,2,13),QDate(2035,2,13));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>QCOMPARE(bills2.count(),<sp/>1);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(bills2.first().getDate()<sp/>==<sp/>QDate(2015,2,13));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(bills2.first().getTitle()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Coucou&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>QVERIFY(bills2.first().getDescription()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Mon<sp/>super<sp/>devis<sp/>de<sp/>la<sp/>mort<sp/>qui<sp/>rox<sp/>du<sp/>poulet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getAllBillingsOfProjectTest()<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMap&lt;Models::Project*,<sp/>Models::Billing*&gt;<sp/>projets<sp/>=</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;<ref refid="df/df8/classDatabases_1_1BillingDatabase_1a44c3e09fbb7d540579f4cceae4d6901f" kindref="member">getAllBillingsOfProject</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(projets.count(),<sp/>77);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCOMPARE(projets.values().count(),<sp/>77);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>others<sp/>tests<sp/>?<sp/>I<sp/>don&apos;t<sp/>want…<sp/>Tired<sp/>!<sp/>And<sp/>I<sp/>want<sp/>a<sp/>cofee<sp/>!<sp/>=)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BillingDatabaseTest::getNb()</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbBills()<sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbBillsPaid()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbQuotes()<sp/>==<sp/>17);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbDocs()<sp/>==<sp/>33);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbBills(17)<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbBillsPaid(17)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbQuotes(17)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVERIFY(<sp/><ref refid="df/df8/classDatabases_1_1BillingDatabase_1aee84d7d07ff4a25251c61030019e5abb" kindref="member">Databases::BillingDatabase::instance</ref>()-&gt;getNbDocs(17)<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="d4/de4/classExceptions_1_1DbException" kindref="compound">DbException</ref>*<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFAIL(e-&gt;what());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/FACT-Team/FactDev/tests/database/billingdatabasetest.cpp"/>
  </compounddef>
</doxygen>
